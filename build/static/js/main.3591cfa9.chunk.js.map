{"version":3,"sources":["reducers/index.js","reducers/firesReducer.js","logo.svg","assets/images/fire.svg","components/Map.js","components/Header.js","App.js","actions/fires.js","api/index.js","index.js"],"names":["combineReducers","fires","action","type","payload","Map","useSelector","state","useState","map","setMap","mapRef","createRef","current","useEffect","tileLayerURI","process","L","center","zoom","layers","tileLayer","attribution","id","Header","href","Component","App","dispatch","useDispatch","a","axios","get","console","log","data","message","className","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"8KAGeA,cAAgB,CAACC,MCHjB,WAAyB,IAAxBA,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAOA,EAAOC,MACb,IAAK,cACJ,OAAOD,EAAOE,QACf,QACC,OAAOH,M,GCLK,I,gCCAA,I,MCgEAI,EA3DH,WAEV,IAEKJ,EAAQK,aAAY,SAACC,GAAD,OAAWA,EAAMN,SAE1C,EAAoBO,mBAAS,IAA7B,mBAAKC,EAAL,KAAUC,EAAV,KACMC,EAASC,sBA6ChB,OA5CCD,EAAOE,QAAUJ,EAEjBK,qBAAU,WAER,IAAIC,EAAY,uHAAmHC,kGACnIL,EAAOE,QAAUI,IAAER,IAAI,MAAO,CAC5BS,OAAQ,CAAC,SAAU,UACnBC,KAAM,EACNC,OAAQ,CACNH,IAAEI,UAAUN,EAAc,CACxBO,YAAa,iEAInBZ,EAAOC,EAAOE,WACd,IAEFC,qBAAU,cAyBR,CAACb,IAGH,mCACC,qBAAKsB,GAAG,W,gCCxCIC,E,4JAhBd,WACC,OACC,gCACC,iDACA,8FACA,uFACA,oEACC,mBAAGC,KAAK,gGAAR,4C,GARgBC,a,0CCuBNC,EAhBH,WAEV,IAAMC,EAAWC,cAMjB,OAJAf,qBAAU,WACRc,ECZsB,uCAAM,WAAOA,GAAP,eAAAE,EAAA,+ECEAC,IAAMC,IAF1B,+BDAoB,OAExB/B,EAFwB,OAG9BgC,QAAQC,IAAIjC,EAAMkC,MAClBP,EAAS,CACRzB,KAAM,cACNC,QAASH,EAAMkC,OANc,gDAS9BF,QAAQC,IAAI,KAAME,SATY,yDAAN,yDDatB,CAACR,IAGD,sBAAKS,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QGXAC,EAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,OAE5DC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.3591cfa9.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport fires from './firesReducer'\n\nexport default combineReducers({fires})","export default (fires = [], action) => {\n\tswitch(action.type) {\n\t\tcase 'FETCH_FIRES':\n\t\t\treturn action.payload\n\t\tdefault:\n\t\t\treturn fires\n\t}\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/fire.1109794b.svg\";","import { useSelector } from 'react-redux'\nimport { useEffect, useState, createRef } from 'react'\nimport L from 'leaflet'\nimport fireIcon from '../assets/images/fire.svg'\n\nconst Map = () => {\n\n  const position = [49.2827, -123.1207]\n\n\tconst fires = useSelector((state) => state.fires)\n\n  let [map, setMap] = useState({})\n  const mapRef = createRef()\n  mapRef.current = map\n\n  useEffect(() => {\n\n    let tileLayerURI = `https://api.mapbox.com/styles/v1/gregslonina/ckqvh9jhh913a17nw1sgej609/tiles/256/{z}/{x}/{y}@2x?access_token=${process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}`\n    mapRef.current = L.map('map', {\n      center: [49.2827, -123.1207],\n      zoom: 8,\n      layers: [\n        L.tileLayer(tileLayerURI, {\n          attribution: '&copy; <a href=\"https://gregslonina.com\">Greg Slonina</a>'\n        })\n      ]\n    })\n    setMap(mapRef.current)\n  },[])\n\n  useEffect(() => {\n    /*\n\t\tlet icon = L.icon({\n\t    iconUrl: fireIcon,\n\t    iconSize: [28, 28],\n\t    iconAnchor: [14, 10]\n\n\t\t})\n\n\t\t//Create markers based on fire data\n    let markers = fires.map((fire, key) => {\n    \tlet { lat, lon, fireNo, discoveryDate, location, hectares, status  } = fire\n    \tlet marker = L.marker([lat, lon], { icon: icon});\n      marker.bindPopup(\n        `<p class='popup__title'>${location}</p>\n        <p>Discovery date: ${discoveryDate} </p>\n        <p>Fire no: ${fireNo} </p>\n        <p>Hectares: ${hectares} </p>\n        <p>Status: ${status} </p>`).openPopup()\n    \treturn marker\n    })\n\n    //Create layer group made of markers\n    L.layerGroup(markers).addTo(mapRef.current)\n    */\n  },[fires])\n\n\treturn(\n\t\t<>\n\t\t\t<div id='map'></div>\n\t\t</>\n\t)\n}\n\nexport default Map","import React, { Component } from 'react'\n\nclass Header extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h1>BC Wildfire Map</h1>\n\t\t\t\t<p>Current active wildfires for the province of British Columbia</p>\n\t\t\t\t<p>All wildfire data is updated one time a day at 01:00AM</p>\n\t\t\t\t<p>All wildfire data is taken from&nbsp;\n\t\t\t\t\t<a href='http://bcfireinfo.for.gov.bc.ca/hprScripts/WildfireNews/Fires.asp?Mode=normal&AllFires=0&FC=0'>\n\t\t\t\t\t\tBC Wildifre Services\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Header","import logo from './logo.svg';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport Map from './components/Map'\nimport Header from './components/Header'\n\nimport { fetchFires } from './actions/fires'\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchFires())\n  },[dispatch])\n\n  return (\n    <div className=\"App container\">\n      <Header></Header>\n      <Map></Map>\n    </div>\n  )\n}\n\nexport default App\n","import * as api from '../api'\n\nexport const fetchFires = () => async (dispatch) => {\n\ttry {\n\t\tconst fires = await api.fetchFires()\n\t\tconsole.log(fires.data)\n\t\tdispatch({\n\t\t\ttype: 'FETCH_FIRES',\n\t\t\tpayload: fires.data\n\t\t})\n\t} catch(error) {\n\t\tconsole.log(error.message)\n\t}\n\n}","import axios from 'axios'\n\nconst url = 'http://localhost:8000/fires'\n\nexport const fetchFires = () => axios.get(url)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n//import './index.css';\nimport App from './App';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}